@using ApplicationService.ViewModels
@model ApplicationService.ViewModels.AddElectricCigaretViewModel
@{
    ViewData["Title"] = "AddItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script href="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js" ></script>
@using (Html.BeginForm("CreatItem", "Home"))
{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <fieldset>
        <row>
            <div class="col-md-12">
                <div class="form-group row col-md-12">
                    <div class="col-md-4">
                        @Html.LabelFor(x => x.Type)
                        @Html.DropDownListFor(model => model.Type, Model.TypeSelectList, new { @class = "form-control", @placeholder = "-Select-" })
                        @Html.ValidationMessageFor(c => c.TypeSelectList, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(x => x.Brand)
                        @Html.DropDownListFor(model => model.Brand, Model.BrandSelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.BrandSelectList, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group row col-md-12">
                    <div class="col-md-4">
                        @Html.DisplayNameFor(x => x.CountToInsert)
                        @Html.TextBoxFor(x => x.CountToInsert, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.CountToInsert, "", new { @class = "text-danger" })



                    </div>
                    <div class="col-md-4">
                        @Html.DisplayNameFor(x => x.Price)
                        @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Price, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group row col-md-12">
                    <div class="col-md-4">
                        @Html.DisplayNameFor(x => x.Description)
                        @Html.TextBoxFor(x => x.Description, new { @class = "form-control", @Required = "Required" })
                        @Html.ValidationMessageFor(c => c.Description, "", new { @class = "text-danger"})

                    </div>
                    <div class="col-md-4">
                        @Html.DisplayNameFor(x => x.Image)
                        @Html.HiddenFor(x => x.Image)

                        <div>
                            <input type="file" accept="image/*" onchange="loadFile(event)">
                            <img id="output" style="width:300px" />
                        </div>

                    </div>
                </div>
            </div>
        </row>

    </fieldset>
    <button type="submit" class="btn btn-primary" value="submit">حفظ</button>

}


<script>
    var loadFile = function (event) {
        var reader = new FileReader();
        reader.onload = function () {
            $("#Image").val(reader.result);
            var output = document.getElementById('output');
            output.src = reader.result;
        };
        var x = reader.readAsDataURL(event.target.files[0]);
        debugger;
    };
</script>

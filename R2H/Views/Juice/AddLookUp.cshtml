
@using ApplicationService.ViewModels
@model ApplicationService.ViewModels.AddLookUpViewModel

@{
    ViewData["Title"] = "AddLookUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <style>
        .check1 {
            width: 22px;
            margin-left: 10px;
        }

        .CategoryCheckBox {
            width: 22px;
            margin-left: 5px;
        }
        .Check5 {
            width: 22px;
            margin-left: 10px;
        }

    </style>
</head>
<h1 class="font-italic">AddLookUp</h1>

@using (Html.BeginForm("CreateLookUp", "Juice"))
{

    @Html.HiddenFor(c => c.TypeId)

    <div class="col-md-6">
        <div class="Error form-control text-danger" style="display:none;"> @ViewBag.SuccessMessage </div>
    </div>
    <fieldset>
        <row>
            <div class="col-md-12">
                <div class="form-group row col-md-12">                    
                    <div class="col-md-1">
                        @Html.LabelFor(x => x.Category, new { @class = "font-italic" })
                        <div class="CategoryCheckBox">
                            @Html.CheckBoxFor(x => x.Category, new { @class = "form-control", @id = "CategoryCheckBox" })
                            @Html.ValidationMessageFor(c => c.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(x => x.Description, new { @class = "font-italic" })
                        @Html.TextBoxFor(x => x.Description, new { @class = "form-control", @Required = "Required" })
                        @Html.ValidationMessageFor(c => c.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row col-md-12">

                    @for (int i = 0; i < Model.NicotinePercentage.Count(); i++)
                    {
                        @Html.HiddenFor(x => x.NicotinePercentage[i].Id)

                        <div class="col-md-3">
                            @Html.DisplayFor(x => x.NicotinePercentage[i].Name, new { @class = "form-control" })
                        </div>
                        <div class="col-md-1"style="    margin-left: -134px;">
                            @Html.CheckBoxFor(x => x.NicotinePercentage[i].IsChecked, new { @class = "form-control" , @id= "NicotenCheckBox", @style = "width:22px" })

                        </div>
                    }
                </div>
            </div>
        </row>
    </fieldset>

    <button style="margin-left: 36px;" type="submit" class="btn btn-primary font-italic" value="submit" onclick="return ValidateForm();">حفظ</button>
}



<script src="~/lib/jquery/dist/jquery.js" type='text/javascript'></script>
<script src="~/lib/jquery/dist/jquery.min.js" type='text/javascript'></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js" type='text/javascript'></script>
<script src="~/lib/jquery-validation/dist/additional-methods.js" type='text/javascript'></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js" type='text/javascript'></script>





<script>

          $(document).ready(function () {
              var errorMassag = '@ViewBag.SuccessMessage';
            if ( errorMassag != "")
            {
                $(".Error").show().delay(5000).fadeOut();
            }
        });
</script>
<script>



    function ValidateForm() {
        var checkedCount = $("#CategoryCheckBox:checked").length;
        var checkedCount1 = $("#NicotenCheckBox:checked").length;
 
        var validCateg = checkedCount > 0;
        var validNicoten = checkedCount1 > 0;
        debugger;

        if (validCateg == 0 || validNicoten==0) {
            alert(' الرجاء اختيار نسبة النيكوتين والنوعية');
            event.preventDefault();

        }
        return valid;
    }


</script>
